// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Process.proto

package org.apache.skywalking.apm.network.ebpf.profiling.process.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFProcessProperties}
 */
public final class EBPFProcessProperties extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFProcessProperties)
    EBPFProcessPropertiesOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFProcessProperties.newBuilder() to construct.
  private EBPFProcessProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFProcessProperties() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFProcessProperties();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessProperties_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessProperties_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties.class, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties.Builder.class);
  }

  private int metadataCase_ = 0;
  private java.lang.Object metadata_;
  public enum MetadataCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    HOSTPROCESS(1),
    K8SPROCESS(2),
    METADATA_NOT_SET(0);
    private final int value;
    private MetadataCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MetadataCase valueOf(int value) {
      return forNumber(value);
    }

    public static MetadataCase forNumber(int value) {
      switch (value) {
        case 1: return HOSTPROCESS;
        case 2: return K8SPROCESS;
        case 0: return METADATA_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MetadataCase
  getMetadataCase() {
    return MetadataCase.forNumber(
        metadataCase_);
  }

  public static final int HOSTPROCESS_FIELD_NUMBER = 1;
  /**
   * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
   * @return Whether the hostProcess field is set.
   */
  @java.lang.Override
  public boolean hasHostProcess() {
    return metadataCase_ == 1;
  }
  /**
   * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
   * @return The hostProcess.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata getHostProcess() {
    if (metadataCase_ == 1) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) metadata_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadataOrBuilder getHostProcessOrBuilder() {
    if (metadataCase_ == 1) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) metadata_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.getDefaultInstance();
  }

  public static final int K8SPROCESS_FIELD_NUMBER = 2;
  /**
   * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
   * @return Whether the k8sProcess field is set.
   */
  @java.lang.Override
  public boolean hasK8SProcess() {
    return metadataCase_ == 2;
  }
  /**
   * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
   * @return The k8sProcess.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata getK8SProcess() {
    if (metadataCase_ == 2) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata) metadata_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.getDefaultInstance();
  }
  /**
   * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadataOrBuilder getK8SProcessOrBuilder() {
    if (metadataCase_ == 2) {
       return (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata) metadata_;
    }
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (metadataCase_ == 1) {
      output.writeMessage(1, (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) metadata_);
    }
    if (metadataCase_ == 2) {
      output.writeMessage(2, (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata) metadata_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (metadataCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) metadata_);
    }
    if (metadataCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata) metadata_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties other = (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties) obj;

    if (!getMetadataCase().equals(other.getMetadataCase())) return false;
    switch (metadataCase_) {
      case 1:
        if (!getHostProcess()
            .equals(other.getHostProcess())) return false;
        break;
      case 2:
        if (!getK8SProcess()
            .equals(other.getK8SProcess())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (metadataCase_) {
      case 1:
        hash = (37 * hash) + HOSTPROCESS_FIELD_NUMBER;
        hash = (53 * hash) + getHostProcess().hashCode();
        break;
      case 2:
        hash = (37 * hash) + K8SPROCESS_FIELD_NUMBER;
        hash = (53 * hash) + getK8SProcess().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFProcessProperties}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFProcessProperties)
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPropertiesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessProperties_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessProperties_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties.class, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (hostProcessBuilder_ != null) {
        hostProcessBuilder_.clear();
      }
      if (k8SProcessBuilder_ != null) {
        k8SProcessBuilder_.clear();
      }
      metadataCase_ = 0;
      metadata_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessProperties_descriptor;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties build() {
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties buildPartial() {
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties result = new org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties(this);
      if (metadataCase_ == 1) {
        if (hostProcessBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = hostProcessBuilder_.build();
        }
      }
      if (metadataCase_ == 2) {
        if (k8SProcessBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = k8SProcessBuilder_.build();
        }
      }
      result.metadataCase_ = metadataCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties) {
        return mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties other) {
      if (other == org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties.getDefaultInstance()) return this;
      switch (other.getMetadataCase()) {
        case HOSTPROCESS: {
          mergeHostProcess(other.getHostProcess());
          break;
        }
        case K8SPROCESS: {
          mergeK8SProcess(other.getK8SProcess());
          break;
        }
        case METADATA_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getHostProcessFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getK8SProcessFieldBuilder().getBuilder(),
                  extensionRegistry);
              metadataCase_ = 2;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int metadataCase_ = 0;
    private java.lang.Object metadata_;
    public MetadataCase
        getMetadataCase() {
      return MetadataCase.forNumber(
          metadataCase_);
    }

    public Builder clearMetadata() {
      metadataCase_ = 0;
      metadata_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadataOrBuilder> hostProcessBuilder_;
    /**
     * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
     * @return Whether the hostProcess field is set.
     */
    @java.lang.Override
    public boolean hasHostProcess() {
      return metadataCase_ == 1;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
     * @return The hostProcess.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata getHostProcess() {
      if (hostProcessBuilder_ == null) {
        if (metadataCase_ == 1) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) metadata_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.getDefaultInstance();
      } else {
        if (metadataCase_ == 1) {
          return hostProcessBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
     */
    public Builder setHostProcess(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata value) {
      if (hostProcessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        hostProcessBuilder_.setMessage(value);
      }
      metadataCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
     */
    public Builder setHostProcess(
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.Builder builderForValue) {
      if (hostProcessBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        hostProcessBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
     */
    public Builder mergeHostProcess(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata value) {
      if (hostProcessBuilder_ == null) {
        if (metadataCase_ == 1 &&
            metadata_ != org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.getDefaultInstance()) {
          metadata_ = org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.newBuilder((org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 1) {
          hostProcessBuilder_.mergeFrom(value);
        } else {
          hostProcessBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 1;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
     */
    public Builder clearHostProcess() {
      if (hostProcessBuilder_ == null) {
        if (metadataCase_ == 1) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 1) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        hostProcessBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.Builder getHostProcessBuilder() {
      return getHostProcessFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadataOrBuilder getHostProcessOrBuilder() {
      if ((metadataCase_ == 1) && (hostProcessBuilder_ != null)) {
        return hostProcessBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 1) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) metadata_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFHostProcessMetadata hostProcess = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadataOrBuilder> 
        getHostProcessFieldBuilder() {
      if (hostProcessBuilder_ == null) {
        if (!(metadataCase_ == 1)) {
          metadata_ = org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.getDefaultInstance();
        }
        hostProcessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadataOrBuilder>(
                (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 1;
      onChanged();;
      return hostProcessBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadataOrBuilder> k8SProcessBuilder_;
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
     * @return Whether the k8sProcess field is set.
     */
    @java.lang.Override
    public boolean hasK8SProcess() {
      return metadataCase_ == 2;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
     * @return The k8sProcess.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata getK8SProcess() {
      if (k8SProcessBuilder_ == null) {
        if (metadataCase_ == 2) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata) metadata_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.getDefaultInstance();
      } else {
        if (metadataCase_ == 2) {
          return k8SProcessBuilder_.getMessage();
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
     */
    public Builder setK8SProcess(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata value) {
      if (k8SProcessBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        k8SProcessBuilder_.setMessage(value);
      }
      metadataCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
     */
    public Builder setK8SProcess(
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.Builder builderForValue) {
      if (k8SProcessBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        k8SProcessBuilder_.setMessage(builderForValue.build());
      }
      metadataCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
     */
    public Builder mergeK8SProcess(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata value) {
      if (k8SProcessBuilder_ == null) {
        if (metadataCase_ == 2 &&
            metadata_ != org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.getDefaultInstance()) {
          metadata_ = org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.newBuilder((org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata) metadata_)
              .mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        if (metadataCase_ == 2) {
          k8SProcessBuilder_.mergeFrom(value);
        } else {
          k8SProcessBuilder_.setMessage(value);
        }
      }
      metadataCase_ = 2;
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
     */
    public Builder clearK8SProcess() {
      if (k8SProcessBuilder_ == null) {
        if (metadataCase_ == 2) {
          metadataCase_ = 0;
          metadata_ = null;
          onChanged();
        }
      } else {
        if (metadataCase_ == 2) {
          metadataCase_ = 0;
          metadata_ = null;
        }
        k8SProcessBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.Builder getK8SProcessBuilder() {
      return getK8SProcessFieldBuilder().getBuilder();
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadataOrBuilder getK8SProcessOrBuilder() {
      if ((metadataCase_ == 2) && (k8SProcessBuilder_ != null)) {
        return k8SProcessBuilder_.getMessageOrBuilder();
      } else {
        if (metadataCase_ == 2) {
          return (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata) metadata_;
        }
        return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.getDefaultInstance();
      }
    }
    /**
     * <code>.skywalking.v3.EBPFKubernetesProcessMetadata k8sProcess = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadataOrBuilder> 
        getK8SProcessFieldBuilder() {
      if (k8SProcessBuilder_ == null) {
        if (!(metadataCase_ == 2)) {
          metadata_ = org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.getDefaultInstance();
        }
        k8SProcessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadataOrBuilder>(
                (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFKubernetesProcessMetadata) metadata_,
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      metadataCase_ = 2;
      onChanged();;
      return k8SProcessBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFProcessProperties)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFProcessProperties)
  private static final org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties();
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFProcessProperties>
      PARSER = new com.google.protobuf.AbstractParser<EBPFProcessProperties>() {
    @java.lang.Override
    public EBPFProcessProperties parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EBPFProcessProperties> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EBPFProcessProperties> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessProperties getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

