// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Process.proto

package org.apache.skywalking.apm.network.ebpf.profiling.process.v3;

public interface EBPFHostProcessMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:skywalking.v3.EBPFHostProcessMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * [required] Entity metadata
   * Must ensure that entity information is unique at the time of reporting
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
   * @return Whether the entity field is set.
   */
  boolean hasEntity();
  /**
   * <pre>
   * [required] Entity metadata
   * Must ensure that entity information is unique at the time of reporting
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
   * @return The entity.
   */
  org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata getEntity();
  /**
   * <pre>
   * [required] Entity metadata
   * Must ensure that entity information is unique at the time of reporting
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
   */
  org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder getEntityOrBuilder();

  /**
   * <pre>
   * [required] Process full command line
   * </pre>
   *
   * <code>string cmd = 2;</code>
   * @return The cmd.
   */
  java.lang.String getCmd();
  /**
   * <pre>
   * [required] Process full command line
   * </pre>
   *
   * <code>string cmd = 2;</code>
   * @return The bytes for cmd.
   */
  com.google.protobuf.ByteString
      getCmdBytes();

  /**
   * <pre>
   * [required] The IP address of the host where the process resides
   * </pre>
   *
   * <code>string hostIP = 3;</code>
   * @return The hostIP.
   */
  java.lang.String getHostIP();
  /**
   * <pre>
   * [required] The IP address of the host where the process resides
   * </pre>
   *
   * <code>string hostIP = 3;</code>
   * @return The bytes for hostIP.
   */
  com.google.protobuf.ByteString
      getHostIPBytes();

  /**
   * <pre>
   * [required] The Process id of the host
   * </pre>
   *
   * <code>int32 pid = 4;</code>
   * @return The pid.
   */
  int getPid();
}
