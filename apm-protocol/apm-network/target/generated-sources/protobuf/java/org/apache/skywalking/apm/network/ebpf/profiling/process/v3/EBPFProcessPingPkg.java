// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Process.proto

package org.apache.skywalking.apm.network.ebpf.profiling.process.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFProcessPingPkg}
 */
public final class EBPFProcessPingPkg extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFProcessPingPkg)
    EBPFProcessPingPkgOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFProcessPingPkg.newBuilder() to construct.
  private EBPFProcessPingPkg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFProcessPingPkg() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFProcessPingPkg();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.class, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.Builder.class);
  }

  public static final int ENTITYMETADATA_FIELD_NUMBER = 1;
  private org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata entityMetadata_;
  /**
   * <pre>
   * Process entity
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
   * @return Whether the entityMetadata field is set.
   */
  @java.lang.Override
  public boolean hasEntityMetadata() {
    return entityMetadata_ != null;
  }
  /**
   * <pre>
   * Process entity
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
   * @return The entityMetadata.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata getEntityMetadata() {
    return entityMetadata_ == null ? org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.getDefaultInstance() : entityMetadata_;
  }
  /**
   * <pre>
   * Process entity
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder getEntityMetadataOrBuilder() {
    return getEntityMetadata();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (entityMetadata_ != null) {
      output.writeMessage(1, getEntityMetadata());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (entityMetadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEntityMetadata());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg other = (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg) obj;

    if (hasEntityMetadata() != other.hasEntityMetadata()) return false;
    if (hasEntityMetadata()) {
      if (!getEntityMetadata()
          .equals(other.getEntityMetadata())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEntityMetadata()) {
      hash = (37 * hash) + ENTITYMETADATA_FIELD_NUMBER;
      hash = (53 * hash) + getEntityMetadata().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFProcessPingPkg}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFProcessPingPkg)
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkgOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.class, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (entityMetadataBuilder_ == null) {
        entityMetadata_ = null;
      } else {
        entityMetadata_ = null;
        entityMetadataBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFProcessPingPkg_descriptor;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg build() {
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg buildPartial() {
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg result = new org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg(this);
      if (entityMetadataBuilder_ == null) {
        result.entityMetadata_ = entityMetadata_;
      } else {
        result.entityMetadata_ = entityMetadataBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg) {
        return mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg other) {
      if (other == org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg.getDefaultInstance()) return this;
      if (other.hasEntityMetadata()) {
        mergeEntityMetadata(other.getEntityMetadata());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getEntityMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata entityMetadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder> entityMetadataBuilder_;
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     * @return Whether the entityMetadata field is set.
     */
    public boolean hasEntityMetadata() {
      return entityMetadataBuilder_ != null || entityMetadata_ != null;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     * @return The entityMetadata.
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata getEntityMetadata() {
      if (entityMetadataBuilder_ == null) {
        return entityMetadata_ == null ? org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.getDefaultInstance() : entityMetadata_;
      } else {
        return entityMetadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public Builder setEntityMetadata(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata value) {
      if (entityMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        entityMetadata_ = value;
        onChanged();
      } else {
        entityMetadataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public Builder setEntityMetadata(
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder builderForValue) {
      if (entityMetadataBuilder_ == null) {
        entityMetadata_ = builderForValue.build();
        onChanged();
      } else {
        entityMetadataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public Builder mergeEntityMetadata(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata value) {
      if (entityMetadataBuilder_ == null) {
        if (entityMetadata_ != null) {
          entityMetadata_ =
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.newBuilder(entityMetadata_).mergeFrom(value).buildPartial();
        } else {
          entityMetadata_ = value;
        }
        onChanged();
      } else {
        entityMetadataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public Builder clearEntityMetadata() {
      if (entityMetadataBuilder_ == null) {
        entityMetadata_ = null;
        onChanged();
      } else {
        entityMetadata_ = null;
        entityMetadataBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder getEntityMetadataBuilder() {
      
      onChanged();
      return getEntityMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder getEntityMetadataOrBuilder() {
      if (entityMetadataBuilder_ != null) {
        return entityMetadataBuilder_.getMessageOrBuilder();
      } else {
        return entityMetadata_ == null ?
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.getDefaultInstance() : entityMetadata_;
      }
    }
    /**
     * <pre>
     * Process entity
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entityMetadata = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder> 
        getEntityMetadataFieldBuilder() {
      if (entityMetadataBuilder_ == null) {
        entityMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder>(
                getEntityMetadata(),
                getParentForChildren(),
                isClean());
        entityMetadata_ = null;
      }
      return entityMetadataBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFProcessPingPkg)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFProcessPingPkg)
  private static final org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg();
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFProcessPingPkg>
      PARSER = new com.google.protobuf.AbstractParser<EBPFProcessPingPkg>() {
    @java.lang.Override
    public EBPFProcessPingPkg parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EBPFProcessPingPkg> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EBPFProcessPingPkg> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessPingPkg getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

