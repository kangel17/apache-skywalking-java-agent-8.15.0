// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Process.proto

package org.apache.skywalking.apm.network.ebpf.profiling.process.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFHostProcessMetadata}
 */
public final class EBPFHostProcessMetadata extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFHostProcessMetadata)
    EBPFHostProcessMetadataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFHostProcessMetadata.newBuilder() to construct.
  private EBPFHostProcessMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFHostProcessMetadata() {
    cmd_ = "";
    hostIP_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFHostProcessMetadata();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.class, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.Builder.class);
  }

  public static final int ENTITY_FIELD_NUMBER = 1;
  private org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata entity_;
  /**
   * <pre>
   * [required] Entity metadata
   * Must ensure that entity information is unique at the time of reporting
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
   * @return Whether the entity field is set.
   */
  @java.lang.Override
  public boolean hasEntity() {
    return entity_ != null;
  }
  /**
   * <pre>
   * [required] Entity metadata
   * Must ensure that entity information is unique at the time of reporting
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
   * @return The entity.
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata getEntity() {
    return entity_ == null ? org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.getDefaultInstance() : entity_;
  }
  /**
   * <pre>
   * [required] Entity metadata
   * Must ensure that entity information is unique at the time of reporting
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
   */
  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder getEntityOrBuilder() {
    return getEntity();
  }

  public static final int CMD_FIELD_NUMBER = 2;
  private volatile java.lang.Object cmd_;
  /**
   * <pre>
   * [required] Process full command line
   * </pre>
   *
   * <code>string cmd = 2;</code>
   * @return The cmd.
   */
  @java.lang.Override
  public java.lang.String getCmd() {
    java.lang.Object ref = cmd_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cmd_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * [required] Process full command line
   * </pre>
   *
   * <code>string cmd = 2;</code>
   * @return The bytes for cmd.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCmdBytes() {
    java.lang.Object ref = cmd_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cmd_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HOSTIP_FIELD_NUMBER = 3;
  private volatile java.lang.Object hostIP_;
  /**
   * <pre>
   * [required] The IP address of the host where the process resides
   * </pre>
   *
   * <code>string hostIP = 3;</code>
   * @return The hostIP.
   */
  @java.lang.Override
  public java.lang.String getHostIP() {
    java.lang.Object ref = hostIP_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      hostIP_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * [required] The IP address of the host where the process resides
   * </pre>
   *
   * <code>string hostIP = 3;</code>
   * @return The bytes for hostIP.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHostIPBytes() {
    java.lang.Object ref = hostIP_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      hostIP_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PID_FIELD_NUMBER = 4;
  private int pid_;
  /**
   * <pre>
   * [required] The Process id of the host
   * </pre>
   *
   * <code>int32 pid = 4;</code>
   * @return The pid.
   */
  @java.lang.Override
  public int getPid() {
    return pid_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (entity_ != null) {
      output.writeMessage(1, getEntity());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cmd_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cmd_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostIP_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, hostIP_);
    }
    if (pid_ != 0) {
      output.writeInt32(4, pid_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (entity_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEntity());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cmd_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, cmd_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostIP_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, hostIP_);
    }
    if (pid_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, pid_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata other = (org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) obj;

    if (hasEntity() != other.hasEntity()) return false;
    if (hasEntity()) {
      if (!getEntity()
          .equals(other.getEntity())) return false;
    }
    if (!getCmd()
        .equals(other.getCmd())) return false;
    if (!getHostIP()
        .equals(other.getHostIP())) return false;
    if (getPid()
        != other.getPid()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEntity()) {
      hash = (37 * hash) + ENTITY_FIELD_NUMBER;
      hash = (53 * hash) + getEntity().hashCode();
    }
    hash = (37 * hash) + CMD_FIELD_NUMBER;
    hash = (53 * hash) + getCmd().hashCode();
    hash = (37 * hash) + HOSTIP_FIELD_NUMBER;
    hash = (53 * hash) + getHostIP().hashCode();
    hash = (37 * hash) + PID_FIELD_NUMBER;
    hash = (53 * hash) + getPid();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFHostProcessMetadata}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFHostProcessMetadata)
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.class, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (entityBuilder_ == null) {
        entity_ = null;
      } else {
        entity_ = null;
        entityBuilder_ = null;
      }
      cmd_ = "";

      hostIP_ = "";

      pid_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.Process.internal_static_skywalking_v3_EBPFHostProcessMetadata_descriptor;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata build() {
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata buildPartial() {
      org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata result = new org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata(this);
      if (entityBuilder_ == null) {
        result.entity_ = entity_;
      } else {
        result.entity_ = entityBuilder_.build();
      }
      result.cmd_ = cmd_;
      result.hostIP_ = hostIP_;
      result.pid_ = pid_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata) {
        return mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata other) {
      if (other == org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata.getDefaultInstance()) return this;
      if (other.hasEntity()) {
        mergeEntity(other.getEntity());
      }
      if (!other.getCmd().isEmpty()) {
        cmd_ = other.cmd_;
        onChanged();
      }
      if (!other.getHostIP().isEmpty()) {
        hostIP_ = other.hostIP_;
        onChanged();
      }
      if (other.getPid() != 0) {
        setPid(other.getPid());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getEntityFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 10
            case 18: {
              cmd_ = input.readStringRequireUtf8();

              break;
            } // case 18
            case 26: {
              hostIP_ = input.readStringRequireUtf8();

              break;
            } // case 26
            case 32: {
              pid_ = input.readInt32();

              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata entity_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder> entityBuilder_;
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     * @return Whether the entity field is set.
     */
    public boolean hasEntity() {
      return entityBuilder_ != null || entity_ != null;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     * @return The entity.
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata getEntity() {
      if (entityBuilder_ == null) {
        return entity_ == null ? org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.getDefaultInstance() : entity_;
      } else {
        return entityBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public Builder setEntity(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata value) {
      if (entityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        entity_ = value;
        onChanged();
      } else {
        entityBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public Builder setEntity(
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder builderForValue) {
      if (entityBuilder_ == null) {
        entity_ = builderForValue.build();
        onChanged();
      } else {
        entityBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public Builder mergeEntity(org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata value) {
      if (entityBuilder_ == null) {
        if (entity_ != null) {
          entity_ =
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.newBuilder(entity_).mergeFrom(value).buildPartial();
        } else {
          entity_ = value;
        }
        onChanged();
      } else {
        entityBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public Builder clearEntity() {
      if (entityBuilder_ == null) {
        entity_ = null;
        onChanged();
      } else {
        entity_ = null;
        entityBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder getEntityBuilder() {
      
      onChanged();
      return getEntityFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder getEntityOrBuilder() {
      if (entityBuilder_ != null) {
        return entityBuilder_.getMessageOrBuilder();
      } else {
        return entity_ == null ?
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.getDefaultInstance() : entity_;
      }
    }
    /**
     * <pre>
     * [required] Entity metadata
     * Must ensure that entity information is unique at the time of reporting
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProcessEntityMetadata entity = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder> 
        getEntityFieldBuilder() {
      if (entityBuilder_ == null) {
        entityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadata.Builder, org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFProcessEntityMetadataOrBuilder>(
                getEntity(),
                getParentForChildren(),
                isClean());
        entity_ = null;
      }
      return entityBuilder_;
    }

    private java.lang.Object cmd_ = "";
    /**
     * <pre>
     * [required] Process full command line
     * </pre>
     *
     * <code>string cmd = 2;</code>
     * @return The cmd.
     */
    public java.lang.String getCmd() {
      java.lang.Object ref = cmd_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cmd_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * [required] Process full command line
     * </pre>
     *
     * <code>string cmd = 2;</code>
     * @return The bytes for cmd.
     */
    public com.google.protobuf.ByteString
        getCmdBytes() {
      java.lang.Object ref = cmd_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cmd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * [required] Process full command line
     * </pre>
     *
     * <code>string cmd = 2;</code>
     * @param value The cmd to set.
     * @return This builder for chaining.
     */
    public Builder setCmd(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cmd_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [required] Process full command line
     * </pre>
     *
     * <code>string cmd = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCmd() {
      
      cmd_ = getDefaultInstance().getCmd();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [required] Process full command line
     * </pre>
     *
     * <code>string cmd = 2;</code>
     * @param value The bytes for cmd to set.
     * @return This builder for chaining.
     */
    public Builder setCmdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cmd_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object hostIP_ = "";
    /**
     * <pre>
     * [required] The IP address of the host where the process resides
     * </pre>
     *
     * <code>string hostIP = 3;</code>
     * @return The hostIP.
     */
    public java.lang.String getHostIP() {
      java.lang.Object ref = hostIP_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostIP_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * [required] The IP address of the host where the process resides
     * </pre>
     *
     * <code>string hostIP = 3;</code>
     * @return The bytes for hostIP.
     */
    public com.google.protobuf.ByteString
        getHostIPBytes() {
      java.lang.Object ref = hostIP_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostIP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * [required] The IP address of the host where the process resides
     * </pre>
     *
     * <code>string hostIP = 3;</code>
     * @param value The hostIP to set.
     * @return This builder for chaining.
     */
    public Builder setHostIP(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hostIP_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [required] The IP address of the host where the process resides
     * </pre>
     *
     * <code>string hostIP = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearHostIP() {
      
      hostIP_ = getDefaultInstance().getHostIP();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [required] The IP address of the host where the process resides
     * </pre>
     *
     * <code>string hostIP = 3;</code>
     * @param value The bytes for hostIP to set.
     * @return This builder for chaining.
     */
    public Builder setHostIPBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hostIP_ = value;
      onChanged();
      return this;
    }

    private int pid_ ;
    /**
     * <pre>
     * [required] The Process id of the host
     * </pre>
     *
     * <code>int32 pid = 4;</code>
     * @return The pid.
     */
    @java.lang.Override
    public int getPid() {
      return pid_;
    }
    /**
     * <pre>
     * [required] The Process id of the host
     * </pre>
     *
     * <code>int32 pid = 4;</code>
     * @param value The pid to set.
     * @return This builder for chaining.
     */
    public Builder setPid(int value) {
      
      pid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [required] The Process id of the host
     * </pre>
     *
     * <code>int32 pid = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPid() {
      
      pid_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFHostProcessMetadata)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFHostProcessMetadata)
  private static final org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata();
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFHostProcessMetadata>
      PARSER = new com.google.protobuf.AbstractParser<EBPFHostProcessMetadata>() {
    @java.lang.Override
    public EBPFHostProcessMetadata parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EBPFHostProcessMetadata> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EBPFHostProcessMetadata> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.process.v3.EBPFHostProcessMetadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

