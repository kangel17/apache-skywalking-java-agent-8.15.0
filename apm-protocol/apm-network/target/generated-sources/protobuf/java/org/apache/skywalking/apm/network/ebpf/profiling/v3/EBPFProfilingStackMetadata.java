// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ebpf/profiling/Profile.proto

package org.apache.skywalking.apm.network.ebpf.profiling.v3;

/**
 * Protobuf type {@code skywalking.v3.EBPFProfilingStackMetadata}
 */
public final class EBPFProfilingStackMetadata extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:skywalking.v3.EBPFProfilingStackMetadata)
    EBPFProfilingStackMetadataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EBPFProfilingStackMetadata.newBuilder() to construct.
  private EBPFProfilingStackMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EBPFProfilingStackMetadata() {
    stackType_ = 0;
    stackSymbols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EBPFProfilingStackMetadata();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.Profile.internal_static_skywalking_v3_EBPFProfilingStackMetadata_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.skywalking.apm.network.ebpf.profiling.v3.Profile.internal_static_skywalking_v3_EBPFProfilingStackMetadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata.class, org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata.Builder.class);
  }

  public static final int STACKTYPE_FIELD_NUMBER = 1;
  private int stackType_;
  /**
   * <pre>
   * stack type
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProfilingStackType stackType = 1;</code>
   * @return The enum numeric value on the wire for stackType.
   */
  @java.lang.Override public int getStackTypeValue() {
    return stackType_;
  }
  /**
   * <pre>
   * stack type
   * </pre>
   *
   * <code>.skywalking.v3.EBPFProfilingStackType stackType = 1;</code>
   * @return The stackType.
   */
  @java.lang.Override public org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType getStackType() {
    @SuppressWarnings("deprecation")
    org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType result = org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType.valueOf(stackType_);
    return result == null ? org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType.UNRECOGNIZED : result;
  }

  public static final int STACKID_FIELD_NUMBER = 2;
  private int stackId_;
  /**
   * <pre>
   * stack id from kernel provide
   * </pre>
   *
   * <code>int32 stackId = 2;</code>
   * @return The stackId.
   */
  @java.lang.Override
  public int getStackId() {
    return stackId_;
  }

  public static final int STACKSYMBOLS_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList stackSymbols_;
  /**
   * <pre>
   * stack symbols
   * </pre>
   *
   * <code>repeated string stackSymbols = 3;</code>
   * @return A list containing the stackSymbols.
   */
  public com.google.protobuf.ProtocolStringList
      getStackSymbolsList() {
    return stackSymbols_;
  }
  /**
   * <pre>
   * stack symbols
   * </pre>
   *
   * <code>repeated string stackSymbols = 3;</code>
   * @return The count of stackSymbols.
   */
  public int getStackSymbolsCount() {
    return stackSymbols_.size();
  }
  /**
   * <pre>
   * stack symbols
   * </pre>
   *
   * <code>repeated string stackSymbols = 3;</code>
   * @param index The index of the element to return.
   * @return The stackSymbols at the given index.
   */
  public java.lang.String getStackSymbols(int index) {
    return stackSymbols_.get(index);
  }
  /**
   * <pre>
   * stack symbols
   * </pre>
   *
   * <code>repeated string stackSymbols = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the stackSymbols at the given index.
   */
  public com.google.protobuf.ByteString
      getStackSymbolsBytes(int index) {
    return stackSymbols_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (stackType_ != org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType.PROCESS_KERNEL_SPACE.getNumber()) {
      output.writeEnum(1, stackType_);
    }
    if (stackId_ != 0) {
      output.writeInt32(2, stackId_);
    }
    for (int i = 0; i < stackSymbols_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, stackSymbols_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (stackType_ != org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType.PROCESS_KERNEL_SPACE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, stackType_);
    }
    if (stackId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, stackId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < stackSymbols_.size(); i++) {
        dataSize += computeStringSizeNoTag(stackSymbols_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getStackSymbolsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata)) {
      return super.equals(obj);
    }
    org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata other = (org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata) obj;

    if (stackType_ != other.stackType_) return false;
    if (getStackId()
        != other.getStackId()) return false;
    if (!getStackSymbolsList()
        .equals(other.getStackSymbolsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STACKTYPE_FIELD_NUMBER;
    hash = (53 * hash) + stackType_;
    hash = (37 * hash) + STACKID_FIELD_NUMBER;
    hash = (53 * hash) + getStackId();
    if (getStackSymbolsCount() > 0) {
      hash = (37 * hash) + STACKSYMBOLS_FIELD_NUMBER;
      hash = (53 * hash) + getStackSymbolsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code skywalking.v3.EBPFProfilingStackMetadata}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:skywalking.v3.EBPFProfilingStackMetadata)
      org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.Profile.internal_static_skywalking_v3_EBPFProfilingStackMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.Profile.internal_static_skywalking_v3_EBPFProfilingStackMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata.class, org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata.Builder.class);
    }

    // Construct using org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      stackType_ = 0;

      stackId_ = 0;

      stackSymbols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.Profile.internal_static_skywalking_v3_EBPFProfilingStackMetadata_descriptor;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata getDefaultInstanceForType() {
      return org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata build() {
      org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata buildPartial() {
      org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata result = new org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata(this);
      int from_bitField0_ = bitField0_;
      result.stackType_ = stackType_;
      result.stackId_ = stackId_;
      if (((bitField0_ & 0x00000001) != 0)) {
        stackSymbols_ = stackSymbols_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.stackSymbols_ = stackSymbols_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata) {
        return mergeFrom((org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata other) {
      if (other == org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata.getDefaultInstance()) return this;
      if (other.stackType_ != 0) {
        setStackTypeValue(other.getStackTypeValue());
      }
      if (other.getStackId() != 0) {
        setStackId(other.getStackId());
      }
      if (!other.stackSymbols_.isEmpty()) {
        if (stackSymbols_.isEmpty()) {
          stackSymbols_ = other.stackSymbols_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureStackSymbolsIsMutable();
          stackSymbols_.addAll(other.stackSymbols_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              stackType_ = input.readEnum();

              break;
            } // case 8
            case 16: {
              stackId_ = input.readInt32();

              break;
            } // case 16
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureStackSymbolsIsMutable();
              stackSymbols_.add(s);
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int stackType_ = 0;
    /**
     * <pre>
     * stack type
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingStackType stackType = 1;</code>
     * @return The enum numeric value on the wire for stackType.
     */
    @java.lang.Override public int getStackTypeValue() {
      return stackType_;
    }
    /**
     * <pre>
     * stack type
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingStackType stackType = 1;</code>
     * @param value The enum numeric value on the wire for stackType to set.
     * @return This builder for chaining.
     */
    public Builder setStackTypeValue(int value) {
      
      stackType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * stack type
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingStackType stackType = 1;</code>
     * @return The stackType.
     */
    @java.lang.Override
    public org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType getStackType() {
      @SuppressWarnings("deprecation")
      org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType result = org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType.valueOf(stackType_);
      return result == null ? org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * stack type
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingStackType stackType = 1;</code>
     * @param value The stackType to set.
     * @return This builder for chaining.
     */
    public Builder setStackType(org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      stackType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * stack type
     * </pre>
     *
     * <code>.skywalking.v3.EBPFProfilingStackType stackType = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStackType() {
      
      stackType_ = 0;
      onChanged();
      return this;
    }

    private int stackId_ ;
    /**
     * <pre>
     * stack id from kernel provide
     * </pre>
     *
     * <code>int32 stackId = 2;</code>
     * @return The stackId.
     */
    @java.lang.Override
    public int getStackId() {
      return stackId_;
    }
    /**
     * <pre>
     * stack id from kernel provide
     * </pre>
     *
     * <code>int32 stackId = 2;</code>
     * @param value The stackId to set.
     * @return This builder for chaining.
     */
    public Builder setStackId(int value) {
      
      stackId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * stack id from kernel provide
     * </pre>
     *
     * <code>int32 stackId = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearStackId() {
      
      stackId_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList stackSymbols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureStackSymbolsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        stackSymbols_ = new com.google.protobuf.LazyStringArrayList(stackSymbols_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * stack symbols
     * </pre>
     *
     * <code>repeated string stackSymbols = 3;</code>
     * @return A list containing the stackSymbols.
     */
    public com.google.protobuf.ProtocolStringList
        getStackSymbolsList() {
      return stackSymbols_.getUnmodifiableView();
    }
    /**
     * <pre>
     * stack symbols
     * </pre>
     *
     * <code>repeated string stackSymbols = 3;</code>
     * @return The count of stackSymbols.
     */
    public int getStackSymbolsCount() {
      return stackSymbols_.size();
    }
    /**
     * <pre>
     * stack symbols
     * </pre>
     *
     * <code>repeated string stackSymbols = 3;</code>
     * @param index The index of the element to return.
     * @return The stackSymbols at the given index.
     */
    public java.lang.String getStackSymbols(int index) {
      return stackSymbols_.get(index);
    }
    /**
     * <pre>
     * stack symbols
     * </pre>
     *
     * <code>repeated string stackSymbols = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the stackSymbols at the given index.
     */
    public com.google.protobuf.ByteString
        getStackSymbolsBytes(int index) {
      return stackSymbols_.getByteString(index);
    }
    /**
     * <pre>
     * stack symbols
     * </pre>
     *
     * <code>repeated string stackSymbols = 3;</code>
     * @param index The index to set the value at.
     * @param value The stackSymbols to set.
     * @return This builder for chaining.
     */
    public Builder setStackSymbols(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStackSymbolsIsMutable();
      stackSymbols_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * stack symbols
     * </pre>
     *
     * <code>repeated string stackSymbols = 3;</code>
     * @param value The stackSymbols to add.
     * @return This builder for chaining.
     */
    public Builder addStackSymbols(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureStackSymbolsIsMutable();
      stackSymbols_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * stack symbols
     * </pre>
     *
     * <code>repeated string stackSymbols = 3;</code>
     * @param values The stackSymbols to add.
     * @return This builder for chaining.
     */
    public Builder addAllStackSymbols(
        java.lang.Iterable<java.lang.String> values) {
      ensureStackSymbolsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, stackSymbols_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * stack symbols
     * </pre>
     *
     * <code>repeated string stackSymbols = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearStackSymbols() {
      stackSymbols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * stack symbols
     * </pre>
     *
     * <code>repeated string stackSymbols = 3;</code>
     * @param value The bytes of the stackSymbols to add.
     * @return This builder for chaining.
     */
    public Builder addStackSymbolsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureStackSymbolsIsMutable();
      stackSymbols_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:skywalking.v3.EBPFProfilingStackMetadata)
  }

  // @@protoc_insertion_point(class_scope:skywalking.v3.EBPFProfilingStackMetadata)
  private static final org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata();
  }

  public static org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EBPFProfilingStackMetadata>
      PARSER = new com.google.protobuf.AbstractParser<EBPFProfilingStackMetadata>() {
    @java.lang.Override
    public EBPFProfilingStackMetadata parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EBPFProfilingStackMetadata> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EBPFProfilingStackMetadata> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.skywalking.apm.network.ebpf.profiling.v3.EBPFProfilingStackMetadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

